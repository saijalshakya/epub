{"version":3,"sources":["components/EpubR.js","utils/helper.js","App.js","index.js"],"names":["EpubR","uri","useState","location","setLocation","style","height","locationChanged","epubcifi","url","process","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAsBeA,EAlBD,WAAM,ICJIC,EDIJ,EAEcC,mBAAS,MAFvB,mBAEXC,EAFW,KAEDC,EAFC,KAOhB,OACI,qBAAKC,MAAO,CAAEC,OAAQ,SAAtB,SACF,cAAC,cAAD,CACEH,SAAUA,EACVI,gBARkB,SAACC,GAEvBJ,EAAYI,IAORC,KChBgBR,EDgBH,qDCfbS,QAAyBT,QCUlBU,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCFNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.99bdbf25.chunk.js","sourcesContent":["import React, { useState } from \"react\"\nimport { ReactReader } from \"react-reader\"\nimport {getPath} from 'utils/helper'\n\nconst EpubR = () => {\n     // And your own state logic to persist state\n  const [location, setLocation] = useState(null)\n  const locationChanged = (epubcifi) => {\n    // epubcifi is a internal string used by epubjs to point to a location in an epub. It looks like this: epubcfi(/6/6[titlepage]!/4/2/12[pgepubid00003]/3:0)\n    setLocation(epubcifi)\n  }\n    return (\n        <div style={{ height: \"100vh\" }}>\n      <ReactReader\n        location={location}\n        locationChanged={locationChanged}\n        url={getPath('/assets/epub/EDITED__An_Introduction_of_Nepal.epub')}\n      />\n    </div>\n    )\n}\n\nexport default EpubR;\n","export const getPath = (uri) => {\n\treturn process.env.PUBLIC_URL + uri;\n}\n","import './App.css';\nimport EpubR from 'components/EpubR'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <EpubR/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}